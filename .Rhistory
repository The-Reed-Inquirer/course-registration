df$Students <- parse_number(df$Students)
df$Seats <- parse_number(df$Seats)
df <- cbind(Class_ID=NA,df)
df$Class_ID <- paste(df$Department,df$Number,df$Name)
test <- sort_and_apply(df,"Class_ID","Seats",unique_value_tester)
df <- df %>% filter(!grepl("CANCELLED",Type))
unique_ids <- unique(df$Class_ID)
for (x in unique_ids) {
indices <- which(df$Class_ID == x)
temp_df <- df[indices,]
if (length(unique(temp_df$Seats)) == 2) {
if (is.na(df[indices[1],]$Seats)) {
df[indices[1],]$Seats <- df[indices[2],]$Seats
}
if (is.na(df[indices[2],]$Seats)) {
df[indices[2],]$Seats <- df[indices[1],]$Seats
}
}
}
df <- cbind(df,Percent_Fill=NA)
full_indices <- which(grepl("Full",df$Enrolled))
df[full_indices,]$Percent_Fill <- 1
for (i in 1:length(df$Percent_Fill)) {
if (is.na(df[i,]$Percent_Fill)) {
df[i,]$Percent_Fill <- df[i,]$Students / df[i,]$Seats
}
}
for (j in 1:length(df$Students)) {
if (is.na(df[j,]$Students) && !is.na(df[j,]$Percent_Fill && !is.na(df[j,]$Seats))) {
df[j,]$Students <- df[j,]$Seats * df[j,]$Percent_Fill
}
}
df <- cbind(df,Level=NA)
df$Level <- df$Number %/% 100
write.csv(df,"df.csv",row.names=FALSE)
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
View(depar_full_table)
View(department_students)
department_students <- sort_and_apply(df,"Department","Students",apply_na_rm(median))
View(department_students)
write.csv(department_students,"course-calculator/department_students.csv",row.names=FALSE)
selectInput(
'params',
'Parameters',
choices = Parameters(),
multiple = TRUE,
selectize = TRUE
)
selectInput(
'params',
'Parameters',
choices = Parameters(),
multiple = TRUE,
selectize = TRUE
)
df <- read_csv("df.csv")
depar_reference <- read_csv("course-calculator/department_students.csv")
colnames(depar_reference)
runApp('course-calculator')
level_students <- sort_and_apply(df,"Level","Students",apply_na_rm(median))
level_students
source("functions.R")
# simple data cleaning of solar data
df <- read_csv("data_mar22.csv")
ident_list <- pretty_split(df$Title," - ")
df <- cbind(Section_ID=NA,df)
df <- cbind(Name=NA,df)
df$Section_ID <- pull_sub_index(ident_list,1)
df$Name <- pull_sub_index(ident_list,2)
section_list <- str_split(df$Section_ID," ")
df <- cbind(Section=NA,df)
df$Section <- pull_sub_index(section_list,3)
df <- cbind(Number=NA,df)
df$Number <- pull_sub_index(section_list,2)
df <- cbind(Department=NA,df)
df$Department <- pull_sub_index(section_list,1)
#load in course catalog data
catalog <- read_csv("catalog.csv")
colnames(catalog)[which(colnames(catalog) == 'course')] <- 'Section_ID'
df <- left_join(df,catalog,by='Section_ID')
df <- df %>% col_rename('Name','Name_SOLAR') %>% col_rename('Title','Title_Catalog')
df <- df %>% filter(Department != "PE")
df$Number <- parse_number(df$Number)
df$Units <- parse_number(df$Units)
df <- cbind(df,Students=NA)
df <- cbind(df,Seats=NA)
fractional_indices <- which(grepl(" of ",df$Enrolled))
split_enrolled <- pretty_split(df$Enrolled," of ")
for (i in fractional_indices) {
df[i,]$Students <- split_enrolled[[i]][1]
df[i,]$Seats <- split_enrolled[[i]][2]
}
df$Students <- parse_number(df$Students)
df$Seats <- parse_number(df$Seats)
df <- cbind(Class_ID=NA,df)
df$Class_ID <- paste(df$Department,df$Number,df$Name)
test <- sort_and_apply(df,"Class_ID","Seats",unique_value_tester)
df <- df %>% filter(!grepl("CANCELLED",Type))
unique_ids <- unique(df$Class_ID)
for (x in unique_ids) {
indices <- which(df$Class_ID == x)
temp_df <- df[indices,]
if (length(unique(temp_df$Seats)) == 2) {
if (is.na(df[indices[1],]$Seats)) {
df[indices[1],]$Seats <- df[indices[2],]$Seats
}
if (is.na(df[indices[2],]$Seats)) {
df[indices[2],]$Seats <- df[indices[1],]$Seats
}
}
}
df <- cbind(df,Percent_Fill=NA)
full_indices <- which(grepl("Full",df$Enrolled))
df[full_indices,]$Percent_Fill <- 1
for (i in 1:length(df$Percent_Fill)) {
if (is.na(df[i,]$Percent_Fill)) {
df[i,]$Percent_Fill <- df[i,]$Students / df[i,]$Seats
}
}
for (j in 1:length(df$Students)) {
if (is.na(df[j,]$Students) && !is.na(df[j,]$Percent_Fill && !is.na(df[j,]$Seats))) {
df[j,]$Students <- df[j,]$Seats * df[j,]$Percent_Fill
}
}
df <- cbind(df,Level=NA)
df$Level <- df$Number %/% 100
write.csv(df,"df.csv",row.names=FALSE)
#conclude data processing
#app preparation
department_students <- sort_and_apply(df,"Department","Students",apply_na_rm(median))
write.csv(department_students,"course-calculator/department_students.csv",row.names=FALSE)
level_students <- sort_and_apply(df,"Level","Students",apply_na_rm(median))
colnames(level_students) <- c("Department","Typical for Level")
write.csv(level_students,"course-calculator/level_students.csv",row.names=FALSE)
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
source("functions.R")
# simple data cleaning of solar data
df <- read_csv("data_mar22.csv")
ident_list <- pretty_split(df$Title," - ")
df <- cbind(Section_ID=NA,df)
df <- cbind(Name=NA,df)
df$Section_ID <- pull_sub_index(ident_list,1)
df$Name <- pull_sub_index(ident_list,2)
section_list <- str_split(df$Section_ID," ")
df <- cbind(Section=NA,df)
df$Section <- pull_sub_index(section_list,3)
df <- cbind(Number=NA,df)
df$Number <- pull_sub_index(section_list,2)
df <- cbind(Department=NA,df)
df$Department <- pull_sub_index(section_list,1)
#load in course catalog data
catalog <- read_csv("catalog.csv")
colnames(catalog)[which(colnames(catalog) == 'course')] <- 'Section_ID'
df <- left_join(df,catalog,by='Section_ID')
df <- df %>% col_rename('Name','Name_SOLAR') %>% col_rename('Title','Title_Catalog')
df <- df %>% filter(Department != "PE")
df$Number <- parse_number(df$Number)
df$Units <- parse_number(df$Units)
df <- cbind(df,Students=NA)
df <- cbind(df,Seats=NA)
fractional_indices <- which(grepl(" of ",df$Enrolled))
split_enrolled <- pretty_split(df$Enrolled," of ")
for (i in fractional_indices) {
df[i,]$Students <- split_enrolled[[i]][1]
df[i,]$Seats <- split_enrolled[[i]][2]
}
df$Students <- parse_number(df$Students)
df$Seats <- parse_number(df$Seats)
df <- cbind(Class_ID=NA,df)
df$Class_ID <- paste(df$Department,df$Number,df$Name)
test <- sort_and_apply(df,"Class_ID","Seats",unique_value_tester)
df <- df %>% filter(!grepl("CANCELLED",Type))
unique_ids <- unique(df$Class_ID)
for (x in unique_ids) {
indices <- which(df$Class_ID == x)
temp_df <- df[indices,]
if (length(unique(temp_df$Seats)) == 2) {
if (is.na(df[indices[1],]$Seats)) {
df[indices[1],]$Seats <- df[indices[2],]$Seats
}
if (is.na(df[indices[2],]$Seats)) {
df[indices[2],]$Seats <- df[indices[1],]$Seats
}
}
}
df <- cbind(df,Percent_Fill=NA)
full_indices <- which(grepl("Full",df$Enrolled))
df[full_indices,]$Percent_Fill <- 1
for (i in 1:length(df$Percent_Fill)) {
if (is.na(df[i,]$Percent_Fill)) {
df[i,]$Percent_Fill <- df[i,]$Students / df[i,]$Seats
}
}
for (j in 1:length(df$Students)) {
if (is.na(df[j,]$Students) && !is.na(df[j,]$Percent_Fill && !is.na(df[j,]$Seats))) {
df[j,]$Students <- df[j,]$Seats * df[j,]$Percent_Fill
}
}
df <- cbind(df,Level=NA)
df$Level <- df$Number %/% 100
write.csv(df,"df.csv",row.names=FALSE)
#conclude data processing
#app preparation
department_students <- sort_and_apply(df,"Department","Students",apply_na_rm(median))
write.csv(department_students,"course-calculator/department_students.csv",row.names=FALSE)
level_students <- sort_and_apply(df,"Level","Students",apply_na_rm(median))
colnames(level_students) <- c("Level","Typical for Level")
write.csv(level_students,"course-calculator/level_students.csv",row.names=FALSE)
runApp('course-calculator')
source("functions.R")
# simple data cleaning of solar data
df <- read_csv("data_mar22.csv")
ident_list <- pretty_split(df$Title," - ")
df <- cbind(Section_ID=NA,df)
df <- cbind(Name=NA,df)
df$Section_ID <- pull_sub_index(ident_list,1)
df$Name <- pull_sub_index(ident_list,2)
section_list <- str_split(df$Section_ID," ")
df <- cbind(Section=NA,df)
df$Section <- pull_sub_index(section_list,3)
df <- cbind(Number=NA,df)
df$Number <- pull_sub_index(section_list,2)
df <- cbind(Department=NA,df)
df$Department <- pull_sub_index(section_list,1)
#load in course catalog data
catalog <- read_csv("catalog.csv")
colnames(catalog)[which(colnames(catalog) == 'course')] <- 'Section_ID'
df <- left_join(df,catalog,by='Section_ID')
df <- df %>% col_rename('Name','Name_SOLAR') %>% col_rename('Title','Title_Catalog')
df <- df %>% filter(Department != "PE")
df$Number <- parse_number(df$Number)
df$Units <- parse_number(df$Units)
df <- cbind(df,Students=NA)
df <- cbind(df,Seats=NA)
fractional_indices <- which(grepl(" of ",df$Enrolled))
split_enrolled <- pretty_split(df$Enrolled," of ")
for (i in fractional_indices) {
df[i,]$Students <- split_enrolled[[i]][1]
df[i,]$Seats <- split_enrolled[[i]][2]
}
df$Students <- parse_number(df$Students)
df$Seats <- parse_number(df$Seats)
df <- cbind(Class_ID=NA,df)
df$Class_ID <- paste(df$Department,df$Number,df$Name)
test <- sort_and_apply(df,"Class_ID","Seats",unique_value_tester)
df <- df %>% filter(!grepl("CANCELLED",Type))
unique_ids <- unique(df$Class_ID)
for (x in unique_ids) {
indices <- which(df$Class_ID == x)
temp_df <- df[indices,]
if (length(unique(temp_df$Seats)) == 2) {
if (is.na(df[indices[1],]$Seats)) {
df[indices[1],]$Seats <- df[indices[2],]$Seats
}
if (is.na(df[indices[2],]$Seats)) {
df[indices[2],]$Seats <- df[indices[1],]$Seats
}
}
}
df <- cbind(df,Percent_Fill=NA)
full_indices <- which(grepl("Full",df$Enrolled))
df[full_indices,]$Percent_Fill <- 1
for (i in 1:length(df$Percent_Fill)) {
if (is.na(df[i,]$Percent_Fill)) {
df[i,]$Percent_Fill <- df[i,]$Students / df[i,]$Seats
}
}
for (j in 1:length(df$Students)) {
if (is.na(df[j,]$Students) && !is.na(df[j,]$Percent_Fill && !is.na(df[j,]$Seats))) {
df[j,]$Students <- df[j,]$Seats * df[j,]$Percent_Fill
}
}
df <- cbind(df,Level=NA)
df$Level <- df$Number %/% 100
write.csv(df,"df.csv",row.names=FALSE)
#conclude data processing
#app preparation
department_students <- sort_and_apply(df,"Department","Students",apply_na_rm(median))
write.csv(department_students,"course-calculator/department_students.csv",row.names=FALSE)
level_students <- sort_and_apply(df,"Level","Students",apply_na_rm(median))
colnames(level_students) <- c("Level","Typical for Level")
write.csv(level_students,"course-calculator/level_students.csv",row.names=FALSE)
df <- cbind(df,Depar_Level_ID=NA)
df$Depar_Level_ID <- paste(df$Department,"_",df$Level,sep="")
depar_level_students <- sort_and_apply(df,"Depar_Level_ID","Students",apply_na_rm(median))
colnames(depar_level_students) <- c("Depar_Level_ID","Typical for Department & Level")
write.csv(depar_level_students,"course-calculator/depar_level_students.csv",row.names=FALSE)
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
colnames(df)
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
runApp('course-calculator')
library(shiny); runApp('course-calculator/app-mobile.R')
?transpose
test <- as.data.frame(ncol=2,nrow=1)
test <- as.data.frame(matrix(ncol=2,nrow=1))
test
test %>% list_transpose()
test %>% pivot()
test %>% pivot_longer()
test %>% pivot_longer(cols='V1')
t(test)
test %>% t()
test %>% t() %>% as.data.frame()
runApp('course-calculator/app-mobile.R')
test
rbind(test,colnames(test))
test %>% rbind(colnames(test))
runApp('course-calculator/app-mobile.R')
?_
runApp('course-calculator/app-mobile.R')
runApp('course-calculator/app-mobile.R')
runApp('course-calculator/app-mobile.R')
?t
transpose_preserve_colnames <- function(x) {
x <- rbind(colnames(x),x)
return(t(x))
}
test
test %>% transpose_preserve_colnames(test)
test %>% transpose_preserve_colnames()
runApp('course-calculator/app-mobile.R')
runApp('course-calculator/app-mobile.R')
runApp('course-calculator/app-mobile.R')
runApp('course-calculator/app-mobile.R')
shiny::runApp('course-calculator')
depar_full_table
source("~/Documents/Developer/R/course-registration/process.R")
depar_full_table
depar_full_table %>% arrange(-Students)
dim(df)
median(df$Students)
median(df$Students,na.rm=TRUE)
View(primary_grous)
View(primary_groups)
dim(primary_groups %>% filter(GROUP_CODE == 1) %>% filter(Students >= 18))
library(tidyverse)
dim(primary_groups %>% filter(GROUP_CODE == 1) %>% filter(Students >= 18))
dim(primary_groups %>% filter(GROUP_CODE == 3))
dim(primary_groups %>% filter(GROUP_CODE == 3) %>% filter(Students >= 18))
28/134
dim(primary_groups %>% filter(GROUP_CODE == 3) %>% filter(Students > 18))
dim(primary_groups %>% filter(GROUP_CODE == 3))
source("functions.R")
# simple data cleaning of solar data
df <- read_csv("data_mar22.csv")
ident_list <- pretty_split(df$Title," - ")
df <- cbind(Section_ID=NA,df)
df <- cbind(Name=NA,df)
df$Section_ID <- pull_sub_index(ident_list,1)
df$Name <- pull_sub_index(ident_list,2)
section_list <- str_split(df$Section_ID," ")
df <- cbind(Section=NA,df)
df$Section <- pull_sub_index(section_list,3)
df <- cbind(Number=NA,df)
df$Number <- pull_sub_index(section_list,2)
df <- cbind(Department=NA,df)
df$Department <- pull_sub_index(section_list,1)
#load in course catalog data
catalog <- read_csv("catalog.csv")
colnames(catalog)[which(colnames(catalog) == 'course')] <- 'Section_ID'
df <- left_join(df,catalog,by='Section_ID')
df <- df %>% col_rename('Name','Name_SOLAR') %>% col_rename('Title','Title_Catalog')
df <- df %>% filter(Department != "PE")
df$Number <- parse_number(df$Number)
df$Units <- parse_number(df$Units)
df <- cbind(df,Students=NA)
df <- cbind(df,Seats=NA)
fractional_indices <- which(grepl(" of ",df$Enrolled))
split_enrolled <- pretty_split(df$Enrolled," of ")
for (i in fractional_indices) {
df[i,]$Students <- split_enrolled[[i]][1]
df[i,]$Seats <- split_enrolled[[i]][2]
}
df$Students <- parse_number(df$Students)
df$Seats <- parse_number(df$Seats)
df <- cbind(Class_ID=NA,df)
df$Class_ID <- paste(df$Department,df$Number,df$Name)
test <- sort_and_apply(df,"Class_ID","Seats",unique_value_tester)
df <- df %>% filter(!grepl("CANCELLED",Type))
unique_ids <- unique(df$Class_ID)
for (x in unique_ids) {
indices <- which(df$Class_ID == x)
temp_df <- df[indices,]
if (length(unique(temp_df$Seats)) == 2) {
if (is.na(df[indices[1],]$Seats)) {
df[indices[1],]$Seats <- df[indices[2],]$Seats
}
if (is.na(df[indices[2],]$Seats)) {
df[indices[2],]$Seats <- df[indices[1],]$Seats
}
}
}
df <- cbind(df,Percent_Fill=NA)
full_indices <- which(grepl("Full",df$Enrolled))
df[full_indices,]$Percent_Fill <- 1
for (i in 1:length(df$Percent_Fill)) {
if (is.na(df[i,]$Percent_Fill)) {
df[i,]$Percent_Fill <- df[i,]$Students / df[i,]$Seats
}
}
for (j in 1:length(df$Students)) {
if (is.na(df[j,]$Students) && !is.na(df[j,]$Percent_Fill && !is.na(df[j,]$Seats))) {
df[j,]$Students <- df[j,]$Seats * df[j,]$Percent_Fill
}
}
df <- cbind(df,Level=NA)
df$Level <- df$Number %/% 100
write.csv(df,"df.csv",row.names=FALSE)
#conclude data processing
#app preparation
department_students <- sort_and_apply(df,"Department","Students",apply_na_rm(median))
write.csv(department_students,"course-calculator/department_students.csv",row.names=FALSE)
level_students <- sort_and_apply(df,"Level","Students",apply_na_rm(median))
colnames(level_students) <- c("Level","Typical for Level")
write.csv(level_students,"course-calculator/level_students.csv",row.names=FALSE)
df <- cbind(df,Depar_Level_ID=NA)
df$Depar_Level_ID <- paste(df$Department,"_",df$Level,sep="")
depar_level_students <- sort_and_apply(df,"Depar_Level_ID","Students",apply_na_rm(median))
colnames(depar_level_students) <- c("Depar_Level_ID","Typical for Department & Level")
write.csv(depar_level_students,"course-calculator/depar_level_students.csv",row.names=FALSE)
#journalistic analysis
department_fill <- sort_and_apply(df,"Department","Percent_Fill",apply_na_rm(mean))
colnames(department_fill) <- c("DEPAR","Perc_Fill")
department_students <- sort_and_apply(df,"Department","Students",apply_na_rm(mean))
colnames(department_students) <- c("DEPAR","Students")
department_total_students <- sort_and_apply(df,"Department","Students",apply_na_rm(sum))
colnames(department_total_students) <- c("DEPAR","Total_Students")
department_num_classes <- sort_and_apply(df,"Department","Students",length)
colnames(department_num_classes) <- c("DEPAR","Num_Classes")
depar_table <- left_join(department_fill,department_students,by="DEPAR")
depar_table <- left_join(depar_table,department_total_students,by="DEPAR")
depar_table <- left_join(depar_table,department_num_classes,by="DEPAR")
depar_table <- depar_table %>%
filter(Num_Classes > 0) %>%
filter(Total_Students > 0) %>%
arrange(-Students)
depar_tibbles <- lapply(unique(df$Department),fill_by_level,df,mean)
depar_full_table <- list_join(depar_tibbles)
depar_full_table$Level <- depar_full_table$Level * 100
depar_all_stats_table <- sort_and_apply(depar_full_table,"Level","Students",apply_na_rm(mean)) %>% arrange(Values)
colnames(depar_all_stats_table) <- c("Level","Students")
depar_all_stats_table <- cbind(Department="All Departments",depar_all_stats_table)
depar_full_table <- rbind(depar_all_stats_table,depar_full_table)
depar_histograms <- sort_and_tibblate(df,c('Department','Level'),'Students',freqs_table)
all_depar_histogram <- sort_and_tibblate(df,c('Level'),'Students',freqs_table)
all_depar_histogram <- cbind(Department='All Departments',all_depar_histogram)
depar_histograms <- rbind(all_depar_histogram,depar_histograms)
depar_histograms$Level <- depar_histograms$Level * 100
depar_histograms <- depar_histograms %>% filter(Val < 48)
write.csv(depar_histograms,"depar_histograms.csv",row.names=FALSE)
#by group analysis
coded_groups <- df
coded_groups <- cbind(GROUP_CODE=NA,coded_groups)
coded_groups$GROUP_CODE <- "ALL"
poss_groups <- c('1','2','3','3+')
for (curr_group in poss_groups) {
temp <- df %>% py_ls_multifilter('group',curr_group)
temp <- cbind(GROUP_CODE=curr_group,temp)
coded_groups <- rbind(coded_groups,temp)
}
primary_groups <- coded_groups %>% filter(GROUP_CODE != "ALL") %>% arrange(parse_number(GROUP_CODE))
(unique(primary_groups$GROUP_CODE))
dim(primary_groups %>% filter(GROUP_CODE == 3))
dim(primary_groups %>% filter(GROUP_CODE == 3) %>% filter(Students >= 18))
28/134
dim(primary_groups %>% filter(GROUP_CODE == 2) %>% filter(Students >= 18))
dim(primary_groups %>% filter(GROUP_CODE == 2))
29/96
dim(primary_groups %>% filter(GROUP_CODE == 1))
dim(primary_groups %>% filter(GROUP_CODE == 1) %>% filter(Students >= 18))
27/134
median(primary_groups %>% filter(GROUP_CODE == 1) %>% pull(Students))
library(tidyverse)
median(primary_groups %>% filter(GROUP_CODE == 1) %>% pull(Students),na.rm=TRUE)
median(primary_groups %>% filter(GROUP_CODE == 2) %>% pull(Students),na.rm=TRUE)
median(primary_groups %>% filter(GROUP_CODE == 3) %>% pull(Students),na.rm=TRUE)
dim9df
dim(df)
colnames(df)
median(df %>% filter(Department == "ENG") %>% pull(Students))
median(df %>% filter(Department == "ENG") %>% pull(Students),na.rm=TRUE)
mean(df %>% filter(Department == "ENG") %>% pull(Students),na.rm=TRUE)
depar_full_table
source("~/Documents/Developer/R/course-registration/process.R")
depar_full_table %>% arrange(-Students)
department_students
department_students %>% arrange(-Students)
df %>% filter(Department == "LITS")
department_students %>% arrange(-Students)
df %>% filter(Department == "ENV")
depar_full_table
group_load_by_level
